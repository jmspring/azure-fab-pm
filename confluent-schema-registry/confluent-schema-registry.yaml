---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: schema-registry
    chart: schema-registry-1.1.5
    heritage: Tiller
    release: confluent-schema-registry
  name: confluent-schema-registry
  namespace: kafka
spec:
  ports:
  - name: schema-registry
    port: 8081
  selector:
    app: schema-registry
    release: confluent-schema-registry

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: schema-registry
    chart: schema-registry-1.1.5
    heritage: Tiller
    release: confluent-schema-registry
  name: confluent-schema-registry
  namespace: kafka
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: schema-registry
        release: confluent-schema-registry
    spec:
      containers:
      - env:
        - name: SCHEMA_REGISTRY_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: PLAINTEXT://kcluster-kafka-brokers.kafka:9092
        - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
          value: confluent-schema-registry
        image: confluentinc/cp-schema-registry:5.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 10
          timeoutSeconds: 5
        name: schema-registry
        ports:
        - containerPort: 8081
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        volumeMounts: null
      volumes: null

